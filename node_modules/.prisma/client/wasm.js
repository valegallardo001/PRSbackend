
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TraitCategoryScalarFieldEnum = {
  id: 'id',
  label: 'label'
};

exports.Prisma.TraitScalarFieldEnum = {
  id: 'id',
  label: 'label',
  description: 'description',
  URL: 'URL',
  efoId: 'efoId',
  mondoId: 'mondoId',
  hpoId: 'hpoId',
  orphaId: 'orphaId',
  otherId: 'otherId'
};

exports.Prisma.TraitToTraitCategoryScalarFieldEnum = {
  traitId: 'traitId',
  traitCategoryId: 'traitCategoryId'
};

exports.Prisma.PRSModelScalarFieldEnum = {
  id: 'id',
  name: 'name',
  numberOfSNP: 'numberOfSNP',
  pgscId: 'pgscId',
  pgscURL: 'pgscURL',
  publicationId: 'publicationId'
};

exports.Prisma.PRSModelToTraitScalarFieldEnum = {
  prsModelId: 'prsModelId',
  traitId: 'traitId'
};

exports.Prisma.ScoringFileScalarFieldEnum = {
  id: 'id',
  assembly: 'assembly',
  path: 'path',
  prsModelId: 'prsModelId'
};

exports.Prisma.PublicationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  journal: 'journal',
  author: 'author',
  date: 'date',
  year: 'year',
  PMID: 'PMID',
  DOI: 'DOI',
  pgpId: 'pgpId'
};

exports.Prisma.ModelEvaluationScalarFieldEnum = {
  id: 'id',
  reportedTrait: 'reportedTrait',
  covariates: 'covariates',
  ppmId: 'ppmId',
  prsModelId: 'prsModelId',
  publicationId: 'publicationId',
  evaluationPopulationSampleId: 'evaluationPopulationSampleId'
};

exports.Prisma.PerformanceMetricEvaluationScalarFieldEnum = {
  id: 'id',
  estimate: 'estimate',
  CILower: 'CILower',
  CIUpper: 'CIUpper',
  modelEvaluationId: 'modelEvaluationId',
  performanceMetricId: 'performanceMetricId'
};

exports.Prisma.PerformanceMetricScalarFieldEnum = {
  id: 'id',
  nameShort: 'nameShort',
  nameLong: 'nameLong',
  type: 'type'
};

exports.Prisma.EvaluationPopulationSampleScalarFieldEnum = {
  id: 'id',
  numberOfIndividuals: 'numberOfIndividuals',
  numberOfCases: 'numberOfCases',
  numberOfControls: 'numberOfControls',
  percentMale: 'percentMale',
  age: 'age',
  ageUnits: 'ageUnits',
  ancestryBroad: 'ancestryBroad',
  ancestryDetails: 'ancestryDetails',
  cohort: 'cohort',
  gcId: 'gcId',
  sourcePMID: 'sourcePMID',
  sourceDOI: 'sourceDOI',
  phenotypeFree: 'phenotypeFree',
  pssId: 'pssId',
  broadAncestryId: 'broadAncestryId'
};

exports.Prisma.BroadAncestryCategoryScalarFieldEnum = {
  id: 'id',
  symbol: 'symbol',
  label: 'label'
};

exports.Prisma.BroadAncestryInModelScalarFieldEnum = {
  percentage: 'percentage',
  broadAncestryId: 'broadAncestryId',
  prsModelId: 'prsModelId'
};

exports.Prisma.DevelopmentPopulationSampleScalarFieldEnum = {
  id: 'id',
  numberOfIndividuals: 'numberOfIndividuals',
  numberOfCases: 'numberOfCases',
  numberOfControls: 'numberOfControls',
  percentMale: 'percentMale',
  age: 'age',
  ageUnits: 'ageUnits',
  ancestryBroad: 'ancestryBroad',
  ancestryDetails: 'ancestryDetails',
  cohort: 'cohort',
  gcId: 'gcId',
  sourcePMID: 'sourcePMID',
  sourceDOI: 'sourceDOI',
  role: 'role',
  prsModelId: 'prsModelId',
  broadAncestryId: 'broadAncestryId'
};

exports.Prisma.BroadAncestryInRefPopScalarFieldEnum = {
  percentage: 'percentage',
  broadAncestryId: 'broadAncestryId',
  referencePopulationId: 'referencePopulationId'
};

exports.Prisma.ReferencePopulationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  studyURL: 'studyURL',
  assembly: 'assembly',
  numberOfindividuals: 'numberOfindividuals',
  numberOfvariants: 'numberOfvariants',
  studyName: 'studyName',
  date: 'date',
  path: 'path'
};

exports.Prisma.PRSAnalysisScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  userId: 'userId',
  date: 'date',
  status: 'status',
  HTMLResultPath: 'HTMLResultPath',
  ancestryThreshold: 'ancestryThreshold',
  overlapThreshold: 'overlapThreshold',
  ancestryAdjustment: 'ancestryAdjustment',
  assembly: 'assembly',
  patientId: 'patientId',
  referencePopulationId: 'referencePopulationId'
};

exports.Prisma.PrioritizedModelScalarFieldEnum = {
  position: 'position',
  prsModelId: 'prsModelId',
  prsAnalysisId: 'prsAnalysisId',
  prsResultId: 'prsResultId'
};

exports.Prisma.PRSResultScalarFieldEnum = {
  id: 'id',
  prs: 'prs',
  percentile: 'percentile',
  overlapPercent: 'overlapPercent',
  prsModelId: 'prsModelId',
  prsAnalysisId: 'prsAnalysisId'
};

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  genotypingMethod: 'genotypingMethod',
  DataFilePath: 'DataFilePath',
  DataFilteFormat: 'DataFilteFormat'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.TraitCategoryOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.TraitOrderByRelevanceFieldEnum = {
  label: 'label',
  description: 'description',
  URL: 'URL',
  efoId: 'efoId',
  mondoId: 'mondoId',
  hpoId: 'hpoId',
  orphaId: 'orphaId',
  otherId: 'otherId'
};

exports.Prisma.PRSModelOrderByRelevanceFieldEnum = {
  name: 'name',
  pgscId: 'pgscId',
  pgscURL: 'pgscURL'
};

exports.Prisma.ScoringFileOrderByRelevanceFieldEnum = {
  path: 'path'
};

exports.Prisma.PublicationOrderByRelevanceFieldEnum = {
  title: 'title',
  journal: 'journal',
  author: 'author',
  PMID: 'PMID',
  DOI: 'DOI',
  pgpId: 'pgpId'
};

exports.Prisma.ModelEvaluationOrderByRelevanceFieldEnum = {
  reportedTrait: 'reportedTrait',
  covariates: 'covariates',
  ppmId: 'ppmId'
};

exports.Prisma.PerformanceMetricOrderByRelevanceFieldEnum = {
  nameShort: 'nameShort',
  nameLong: 'nameLong'
};

exports.Prisma.EvaluationPopulationSampleOrderByRelevanceFieldEnum = {
  ageUnits: 'ageUnits',
  ancestryBroad: 'ancestryBroad',
  ancestryDetails: 'ancestryDetails',
  cohort: 'cohort',
  gcId: 'gcId',
  sourcePMID: 'sourcePMID',
  sourceDOI: 'sourceDOI',
  phenotypeFree: 'phenotypeFree',
  pssId: 'pssId'
};

exports.Prisma.BroadAncestryCategoryOrderByRelevanceFieldEnum = {
  symbol: 'symbol',
  label: 'label'
};

exports.Prisma.DevelopmentPopulationSampleOrderByRelevanceFieldEnum = {
  ageUnits: 'ageUnits',
  ancestryBroad: 'ancestryBroad',
  ancestryDetails: 'ancestryDetails',
  cohort: 'cohort',
  gcId: 'gcId',
  sourcePMID: 'sourcePMID',
  sourceDOI: 'sourceDOI'
};

exports.Prisma.ReferencePopulationOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  studyURL: 'studyURL',
  studyName: 'studyName',
  path: 'path'
};

exports.Prisma.PRSAnalysisOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  userId: 'userId',
  date: 'date',
  status: 'status',
  HTMLResultPath: 'HTMLResultPath'
};

exports.Prisma.PRSResultOrderByRelevanceFieldEnum = {
  percentile: 'percentile'
};

exports.Prisma.PatientOrderByRelevanceFieldEnum = {
  patientId: 'patientId',
  genotypingMethod: 'genotypingMethod',
  DataFilePath: 'DataFilePath',
  DataFilteFormat: 'DataFilteFormat'
};
exports.AssemblyType = exports.$Enums.AssemblyType = {
  GRCh37: 'GRCh37',
  GRCh38: 'GRCh38'
};

exports.PerformanceMetricType = exports.$Enums.PerformanceMetricType = {
  RISK_ASSOCIATION: 'RISK_ASSOCIATION',
  DISCRIMINATING_POWER: 'DISCRIMINATING_POWER',
  OTHER: 'OTHER'
};

exports.DevelopmentRoleType = exports.$Enums.DevelopmentRoleType = {
  BASE: 'BASE',
  TUNING: 'TUNING'
};

exports.AncestryAdjustmentType = exports.$Enums.AncestryAdjustmentType = {
  CONTINUOUS: 'CONTINUOUS',
  DISCONTINUOUS: 'DISCONTINUOUS'
};

exports.Prisma.ModelName = {
  TraitCategory: 'TraitCategory',
  Trait: 'Trait',
  TraitToTraitCategory: 'TraitToTraitCategory',
  PRSModel: 'PRSModel',
  PRSModelToTrait: 'PRSModelToTrait',
  ScoringFile: 'ScoringFile',
  Publication: 'Publication',
  ModelEvaluation: 'ModelEvaluation',
  PerformanceMetricEvaluation: 'PerformanceMetricEvaluation',
  PerformanceMetric: 'PerformanceMetric',
  EvaluationPopulationSample: 'EvaluationPopulationSample',
  BroadAncestryCategory: 'BroadAncestryCategory',
  BroadAncestryInModel: 'BroadAncestryInModel',
  DevelopmentPopulationSample: 'DevelopmentPopulationSample',
  BroadAncestryInRefPop: 'BroadAncestryInRefPop',
  ReferencePopulation: 'ReferencePopulation',
  PRSAnalysis: 'PRSAnalysis',
  PrioritizedModel: 'PrioritizedModel',
  PRSResult: 'PRSResult',
  Patient: 'Patient'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
